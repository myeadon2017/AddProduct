package com.dao;

import java.util.List;

import com.model.AddProduct;

//This interface is used for adding products functionality skeleton
public interface ProdDao {
	
	public void addProduct(AddProduct ap);

}

--------------------------------------------------------------------------------

package com.model;

import javax.persistence.Entity;
import javax.persistence.Id;

//This class is used to create the entity of products
@Entity
public class AddProduct {

	@Id
	private int prodID;
	private String prodName;
	private String details;
	public int getProdID() {
		return prodID;
	}
	public void setProdID(int prodID) {
		this.prodID = prodID;
	}
	public String getProdName() {
		return prodName;
	}
	public void setProdName(String prodName) {
		this.prodName = prodName;
	}
	public String getDetails() {
		return details;
	}
	public void setDetails(String details) {
		this.details = details;
	}
	public AddProduct(int prodID, String prodName, String details) {
		super();
		this.prodID = prodID;
		this.prodName = prodName;
		this.details = details;
	}
	@Override
	public String toString() {
		return "AddProduct [prodID=" + prodID + ", prodName=" + prodName
				+ ", details=" + details + "]";
	}
	public AddProduct() {
		super();
		// TODO Auto-generated constructor stub
	}

}

--------------------------------------------------------------------------------

package com.service;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import org.hibernate.Transaction;
import org.hibernate.Session;

import com.dao.ProdDao;
import com.model.AddProduct;
import com.utility.HibernateUtility;

import jdk.internal.org.objectweb.asm.tree.MultiANewArrayInsnNode;

//This class is used as a service for the Products
public class ProductService implements ProdDao{


	//This function is used to record a product into the database
	@Override
	public void addProduct(AddProduct ap) {
		System.out.println("inside service");

		try {
			
			//This declares the Hibernate session
			Session session= HibernateUtility.getSession();
			Transaction tx= session.beginTransaction();
			
			session.save(ap);
			tx.commit();
			System.out.println(("Product Added"));
			
			

		} catch (Exception e) {
			
		}

	}
	

}

-----------------------------------------------------------------------------

package com.servlet;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.service.ProductService;

//This is the servlet used for adding products into the database
@WebServlet("/AddProduct")
public class AddProduct extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	
	
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		ProductService productService= new ProductService();
		System.out.println("inside servlet");
		
		com.model.AddProduct ap= new com.model.AddProduct(Integer.parseInt(request.getParameter("prodID")),request.getParameter("prodName"),request.getParameter("details"));
		
		productService.addProduct(ap);
		HttpSession session= request.getSession();
		session.setAttribute("sesname", request.getParameter("prodName"));
		
		//This function will take the user to the product added success page  
		response.sendRedirect("addproductsuccess.jsp");
	}
	

	
}

------------------------------------------------------------------------------

package com.utility;

import org.hibernate.SessionFactory;
import org.hibernate.cfg.AnnotationConfiguration;
import org.hibernate.Session;

//This class is used as a Hibernate utility
public class HibernateUtility {

	
	private static SessionFactory sf;
	
	static{
		sf= new AnnotationConfiguration().configure().buildSessionFactory();
		
	}
	public static Session getSession(){
		
		Session session= sf.openSession();
		return session;
	}
}

------------------------------------------------------------------------------

<?xml version = "1.0" encoding = "utf-8"?>
<!DOCTYPE hibernate-configuration SYSTEM 
"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
   <session-factory>
   
      <property name = "hibernate.dialect">
         org.hibernate.dialect.H2Dialect
      </property>
      
      <property name = "hibernate.connection.driver_class">
         org.h2.Driver
      </property>
      
      <property name = "hibernate.hbm2ddl.auto">
        update
      </property>
      
      <!-- Assume test is the database name -->
      
      <property name = "hibernate.connection.url">
         jdbc:h2:~/test
      </property>
      
      <property name = "hibernate.connection.username">
         sa
      </property>
      
      <property name = "hibernate.connection.password">
        
      </property>
      
      <!-- List of XML mapping files -->
      <mapping class = "com.model.AddProduct"/>
      
   </session-factory>
</hibernate-configuration>

------------------------------------------------------------------------------

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Add Product</title>
</head>
<body>

<form method="post" action="AddProduct">

ProductId:<input type="text" name="prodID">
Product Name:<input type="text" name="prodName">
Product Details: <input type="text" name="details"><br/>

<button type="submit">Add Product</button>

</body>

-------------------------------------------------------------------------------

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
You product has been added <%= session.getAttribute("sesname") %>

<br/>
<a href="addproduct.html">Add Product</a>

</body>
</html